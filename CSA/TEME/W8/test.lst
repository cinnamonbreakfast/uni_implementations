     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf
     8                                  import exit msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                  
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14 00000000 00<rept>                    a times 120 db 0
    15 00000078 257300                      format db '%s', 0
    16                                      len equ 120
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 6A78                            push len
    22 00000002 68[00000000]                    push a
    23 00000007 68[78000000]                    push format
    24 0000000C FF15[00000000]                  call [scanf]
    25                                          
    26 00000012 83C40C                          add esp, 4*3
    27                                          
    28 00000015 68[00000000]                    push a
    29 0000001A 68[78000000]                    push format
    30 0000001F FF15[00000000]                  call [printf]
    31                                          
    32 00000025 83C408                          add esp, 4*2
    33                                          
    34 00000028 6A78                            push len
    35 0000002A 68[00000000]                    push a
    36 0000002F 68[78000000]                    push format
    37 00000034 FF15[00000000]                  call [scanf]
    38                                          
    39 0000003A 83C40C                          add esp, 4*3
    40                                          
    41 0000003D 68[00000000]                    push a
    42 00000042 68[78000000]                    push format
    43 00000047 FF15[00000000]                  call [printf]
    44                                          
    45 0000004D 83C408                          add esp, 4*2
    46                                          
    47                                      
    48                                          ; exit(0)
    49 00000050 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    50 00000052 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
