     1                                  bits 32
     2                                  
     3                                  global start
     4                                  extern fnc
     5                                  
     6                                  extern exit, printf
     7                                  
     8                                  import exit msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  
    11                                  segment data use32 class=data public
    12 00000000 78A63412785634127D-         sir dd 1234A678h, 12345678h, 1AC3B47Dh, 0FEDC9876h
    12 00000009 B4C31A7698DCFE     
    13                                      ln1 equ ($-sir)/4
    14                                      elem_size equ 4
    15                                      
    16 00000010 00<rept>                    sir2 times ln1 db 0
    17                                      
    18 00000014 256400                      format db "%d", 0
    19                                      
    20 00000017 0000                        suma dw 0
    21 00000019 00                          ind db 0
    22                                      
    23                                      
    24                                  segment code use32 class=code public
    25                                      start:
    26                                          
    27                                          
    28 00000000 BE[00000000]                    mov esi, sir
    29 00000005 BF[10000000]                    mov edi, sir2
    30 0000000A FC                              cld
    31                                          
    32 0000000B BB00000000                      mov ebx, 0
    33                                          
    34 00000010 B904000000                      mov ecx, ln1
    35                                          
    36                                          cat_timp:
    37 00000015 51                                  push ecx ; save ecx for first loop
    38                                              
    39 00000016 68[00000000]                        push sir
    40 0000001B 68[19000000]                        push ind
    41 00000020 68[17000000]                        push suma
    42 00000025 E8(00000000)                        call fnc
    43 0000002A 83C408                              add esp, 4*2
    44                                              
    45 0000002D 59                                  pop ecx
    46                                              
    47 0000002E E2E5                            loop cat_timp
    48                                          
    49 00000030 B904000000                      mov ecx, 4
    50 00000035 B800000000                      mov eax, 0
    51 0000003A BE[10000000]                    mov esi, sir2
    52                                          
    53                                          afisare:
    54                                          
    55 0000003F 51                              push ecx
    56                                          
    57 00000040 50                              push dword eax
    58 00000041 68[14000000]                    push dword format
    59 00000046 FF15[00000000]                  call [printf]
    60 0000004C 83C408                          add esp, 4*2
    61                                          
    62 0000004F 59                              pop ecx
    63                                          
    64 00000050 AC                              lodsb
    65                                          
    66 00000051 E2EC                            loop afisare
    67                                          
    68                                      
    69 00000053 6A00                        push dword 0
    70 00000055 FF15[00000000]              call [exit]
