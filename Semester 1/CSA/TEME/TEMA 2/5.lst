     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit
     6                                  import exit msvcrt.dll
     7                                  
     8                                  
     9                                  ; a, b, c : byte
    10                                  ; d, x : word
    11                                  ; [100-10*a+4*(b+c)]-d
    12                                  segment data use32 class=data
    13 00000000 0A                          a db 10
    14 00000001 05                          b db 5
    15 00000002 03                          c db 3
    16 00000003 0400                        d dw 4
    17 00000005 0000                        x dw 0
    18                                      
    19                                      ; the result is:
    20                                      ; 28
    21                                  
    22                                  
    23                                  segment code use32 class=code
    24                                      start:
    25 00000000 A0[00000000]                    MOV AL, [a]
    26                                          MUL 10
    26          ******************       error: invalid combination of opcode and operands
    27 00000005 6689C2                          MOV DX, AX
    28 00000008 A0[01000000]                    MOV AL, [b]
    29 0000000D 0205[02000000]                  ADD AL, [c]
    30                                          MUL 4
    30          ******************       error: invalid combination of opcode and operands
    31 00000013 6601C2                          ADD DX, AX
    32 00000016 66B86400                        MOV AX, 100
    33 0000001A 6629D0                          SUB AX, DX
    34 0000001D 662B05[03000000]                SUB AX, [d]
    35                                          
    36 00000024 66A3[05000000]                  MOV [x], AX
    37                                      
    38                                          ; exit(0)
    39 0000002A 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    40 0000002C FF15[00000000]                  call    [exit]       ; call exit to terminate the program
