     1                                  bits 32
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit
     6                                  import exit msvcrt.dll
     7                                  
     8                                  ; array of words
     9                                  ; if byte low < byte high -> b[i] = 1
    10                                  ; if byte low = byte high -> b[i] = 0
    11                                  ; if byte low > byte high -> b[i] = -1
    12                                  
    13                                  segment data use32 class=data
    14 00000000 341212AB1111                a dw 0x1234, 0xAB12, 0x1111
    15                                      len EQU ($-a)/2
    16 00000006 02<rept>                    b times len db 2
    17                                  
    18                                  segment code use32 class=code
    19                                      start:
    20 00000000 B903000000                      MOV ECX, len
    21 00000005 E31F                            JECXZ final
    22                                          
    23 00000007 BE[00000000]                    MOV ESI, a
    24 0000000C BF[06000000]                    MOV EDI, b
    25                                          
    26                                          bucla:
    27 00000011 66AD                                LODSW ; AX = a[i]
    28 00000013 38E0                                CMP AL, AH
    29 00000015 7C06                                JL caz1
    30 00000017 7408                                JE caz2
    31                                                  ;caz3
    32 00000019 B0FF                                    MOV AL, -1
    33 0000001B EB06                                    JMP continue
    34                                              caz1:
    35 0000001D B001                                    MOV AL, 1
    36 0000001F EB02                                    JMP continue
    37                                              caz2:
    38 00000021 B001                                    MOV AL, 1
    39                                                  
    40                                              continue:
    41 00000023 AA                                  STOSB
    42 00000024 E2EB                            LOOP bucla
    43                                          
    44                                          final:
    45                                          ; thats all folks!
    46 00000026 6A00                            push    dword 0
    47 00000028 FF15[00000000]                  call    [exit]
